using System.Diagnostics;

namespace AssortedTopics
{
    public class MyClass : IDisposable
    {
        public MyClass()
        {
            Console.WriteLine("hello");
        }

        public void Dispose()
        {
            Console.WriteLine("goodbye");
        }
    }

    public class Disposable : IDisposable
    {
        private readonly Action end;

        private Disposable(Action start, Action end)
        {
            this.end = end;
            start();
        }

        public void Dispose()
        {
            end();
        }

        public static Disposable Create(Action start, Action end)
        {
            return new Disposable(start, end);
        }
    }

    public class SimpleTimer : IDisposable
    {
        private readonly Stopwatch str;

        public SimpleTimer()
        {
            str = new Stopwatch();
            str.Start();
        } 

        public void Dispose()
        {
            str.Stop();
            Console.WriteLine($"{str.ElapsedMilliseconds} msec elapsed");
        }
    }


    class ExploitingDisposableDemo
    {
        public static void Demo(string[] args)
        {
            using (var mc = new MyClass())
            {

            }
            using (new MyClass())
            {

            }

            using (new SimpleTimer())
            {
                Thread.Sleep(1000);
            }

            var st = new Stopwatch();
            using (Disposable.Create(
                       () => st.Start(),
                       () => st.Stop()))
            {
                Console.WriteLine("something here...");
                Thread.Sleep(1000);
            }

            Console.WriteLine(st.ElapsedMilliseconds);
        }
    }
}

